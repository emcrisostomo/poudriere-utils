#!@ZSH_PATH@
# -*- coding: utf-8; tab-width: 2; indent-tabs-mode: nil; sh-basic-offset: 2; sh-indentation: 2; -*- vim:fenc=utf-8:et:sw=2:ts=2:sts=2
#
# Copyright (C) 2015 Enrico M. Crisostomo
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#   1. Redistributions of source code must retain the above copyright notice,
#      this list of conditions and the following disclaimer.
#
#   2. Redistributions in binary form must reproduce the above copyright notice,
#      this list of conditions and the following disclaimer in the documentation
#      and/or other materials provided with the distribution.
#
#   3. Neither the name of the copyright holder nor the names of its
#      contributors may be used to endorse or promote products derived from this
#      software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Unauthorized copy and distribution of this file is strictly prohibited.
#
setopt   local_options
setopt   local_traps
unsetopt glob_subst

set -o errexit
set -o nounset

# Check for required programs.
command -v poudriere > /dev/null 2>&1 || {
  >&2 print -- Cannot find poudriere.
  exit 1
}

# Setting variable defaults.
PROGNAME=$0
: ${POUDRIERE_PATH=@POUDRIERE_PATH@}
: ${POUDRIERE_JAIL_NAME=""}
: ${POUDRIERE_ETC="/usr/local/etc/poudriere.d"}
: ${POUDRIERE_ARCH="amd64"}
: ${POUDRIERE_UPDATE_JAIL=0}
: ${POUDRIERE_UPDATE_PORTS=0}
: ${POUDRIERE_PORTS_TREE=""}

print_usage()
{
  print -- "${PROGNAME}"
  print
  print -- "Usage:"
  print -- "${PROGNAME} [option]*"
  print
  print -- "Options:"
  print -- "  -a         Use the specified architecture."
  print -- "  -h         Show this help."
  print -- "  -j         Use the specified jail."
  print -- "  -p         Use the specified ports tree."
  print -- "  -U         Update the jail."
  print -- "  -u         Update the port tree."
  print
  print -- "Report bugs to <enrico.m.crisostomo@gmail.com>."
}

parse_opts()
{
  while getopts ":a:hj:p:Uu" opt
  do
    case $opt in
      a) POUDRIERE_ARCH=${OPTARG} ;;
      h)
        print_usage
        exit 0
        ;;
      j) POUDRIERE_JAIL_NAME=${OPTARG} ;;
      p) POUDRIERE_PORTS_TREE=${OPTARG} ;;
      U) POUDRIERE_UPDATE_JAIL=1 ;;
      u) POUDRIERE_UPDATE_PORTS=1 ;;
      \?)
        >&2 print -- Invalid option -${OPTARG}.
        exit 1
        ;;
      :)
        >&2 print -- Missing argument to -${OPTARG}.
        exit 1
        ;;
    esac
  done

  shift $((OPTIND-1))

  # Sanity checks
  (( $# == 0 )) || {
    >&2 print -- Syntax error.
    exit 2
  }
}

check_variables()
{
  [[ ! -z ${POUDRIERE_JAIL_NAME} ]] || {
    >&2 print -- Missing jail name.
    exit 4
  }
  
  [[ -e ${POUDRIERE_ETC}/${POUDRIERE_JAIL_NAME}-pkglist ]] || {
    >&2 print -- Cannot find package list file: ${POUDRIERE_ETC}/${POUDRIERE_JAIL_NAME}-pkglist
    exit 4
  }
}

set_defaults()
{
  # If there is only a jail, use it as a default.
  if [[ -z ${POUDRIERE_JAIL_NAME} ]]
  then
    JAILS_OUTPUT=( $(${POUDRIERE_PATH} jails -qln) )
    if (( ${#JAILS_OUTPUT} == 1 ))
    then
      POUDRIERE_JAIL_NAME=${JAILS_OUTPUT[1]}
    fi
  fi

  # If there is only a port tree, use it as a default.
  if [[ -z ${POUDRIERE_PORTS_TREE} ]]
  then
    PORTS_OUTPUT=( $(${POUDRIERE_PATH} ports -qln) )
    if (( ${#PORTS_OUTPUT} == 1 ))
    then
      POUDRIERE_PORTS_TREE=${PORTS_OUTPUT[1]}
    fi
  fi
}

# Main routine.
parse_opts $*
set_defaults
check_variables

if (( ${POUDRIERE_UPDATE_PORTS} > 0 ))
then
  ${POUDRIERE_PATH} ports -u -p ${POUDRIERE_PORTS_TREE}
fi

if (( ${POUDRIERE_UPDATE_JAIL} > 0 ))
then
  ${POUDRIERE_PATH} jail -u -j ${POUDRIERE_JAIL_NAME}
fi

${POUDRIERE_PATH} bulk \
                  -j ${POUDRIERE_JAIL_NAME} \
                  -p ${POUDRIERE_PORTS_TREE} \
                  -f ${POUDRIERE_ETC}/${POUDRIERE_JAIL_NAME}-pkglist
